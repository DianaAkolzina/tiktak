using System;

namespace TicTacToe
{
    class Program
    {
        static char[] arr = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
        static int player = 1;
        static int choice;
        static int flag = 0;

        static void Main(string[] args)
        {
            do
            {
                Console.Clear();
                Console.WriteLine("Player 1: X and Player 2: O");
                Console.WriteLine("\n");

                if (player % 2 == 0)
                {
                    Console.WriteLine("Player 2's turn");
                }
                else
                {
                    Console.WriteLine("Player 1's turn");
                }
                Console.WriteLine("\n");
                Board();

                string input = Console.ReadLine();
                bool validInput = Int32.TryParse(input, out choice);

                if (validInput && choice >= 1 && choice <= 9)
                {
                    if (arr[choice] != 'X' && arr[choice] != 'O')
                    {
                        if (player % 2 == 0)
                        {
                            arr[choice] = 'O';
                            player++;
                        }
                        else
                        {
                            arr[choice] = 'X';
                            player++;
                        }
                    }
                    else
                    {
                        Console.WriteLine("Sorry, the row {0} is already marked with an {1}", choice, arr[choice]);
                        Console.ReadKey();
                    }
                }
                else
                {
                    Console.WriteLine("Invalid choice. Please enter a valid choice between 1 and 9.");
                    Console.ReadKey();
                }

                flag = CheckWin();
            }
            while (flag != 1 && flag != -1);

            Console.Clear();
            Board();

            if (flag == 1)
            {
                Console.WriteLine("Player {0} has won!", (player % 2) + 1);
            }
            else
            {
                Console.WriteLine("It's a draw!");
            }

            Console.WriteLine("\nPress 'R' to restart or any other key to exit.");
            char restartChoice = Console.ReadKey().KeyChar;

            if (restartChoice == 'R' || restartChoice == 'r')
            {
                ResetGame();
                Main(args);
            }
        }

        private static void ResetGame()
        {
            arr = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
            player = 1;
            choice = 0;
            flag = 0;
        }

        private static void Board()
        {
            Console.WriteLine("     |     |      ");
            Console.WriteLine("  {0}  |  {1}  |  {2}", arr[1], arr[2], arr[3]);
            Console.WriteLine("_____|_____|_____ ");
            Console.WriteLine("     |     |      ");
            Console.WriteLine("  {0}  |  {1}  |  {2}", arr[4], arr[5], arr[6]);
            Console.WriteLine("_____|_____|_____ ");
            Console.WriteLine("     |     |      ");
            Console.WriteLine("  {0}  |  {1}  |  {2}", arr[7], arr[8], arr[9]);
            Console.WriteLine("     |     |      ");
        }

      private static int CheckWin()
{
    int[,] winConditions = new int[,]
    {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9},
        {1, 4, 7},
        {2, 5, 8},
        {3, 6, 9},
        {1, 5, 9},
        {3, 5, 7}
    };

    for (int i = 0; i < winConditions.GetLength(0); i++)
    {
        if (IsConsecutive(winConditions[i, 0], winConditions[i, 1], winConditions[i, 2]))
        {
            return 1;
        }
    }

    if (IsDraw())
    {
        return -1;
    }

    return 0;
}
